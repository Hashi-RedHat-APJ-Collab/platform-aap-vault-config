---
- name: Vault SSH Credential Block
  block:
  - name: Configure AppRole for HashiCorp Vault SSH Credential
    ansible.controller.credential:
      name: "hashicorp_vault_ssh_approle_{{ tenant }}"    # Name of the credential per aap tenant
      description: "Credential for HashiCorp Vault AppRole integration {{ tenant }}"
      organization: "{{ organization_name }}"        # Organization name in AAP
      credential_type: "HashiCorp Vault Signed SSH"       # Type of the credential
      state: "{{ state }}"                           # updated or created if absent
      inputs:                                             # All required fields for this credential type
        url: "{{ vault_url }}"                            # Server URL (VAULT_ADDR)
        cacert: "{{ client_cert | default(None) }}"           # CA Certificate if applicable
        role_id: "{{ role_id }}"                     # Vault AppRole role_id
        secret_id: "{{ secret_id }}"                 # Vault AppRole secret_id
        default_auth_path: "{{ secret_id | default('approle') }}"     # Path to the Vault AppRole auth method
        namespace: "{{ vault_namespace }}"           # Vault namespace if applicable
      validate_certs: false
      controller_host: "{{ aap_url }}"
      controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"
      controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"
    register: vault_credentials

  - name: Display Credential Status
    ansible.builtin.debug:
      msg: "Credential update response: {{ vault_credentials }}"

  - name: Configure Machine Credentials using Vault Signed SSH
    ansible.controller.credential:
      name: "hashicorp_vault_ssh_machine_creds_{{ tenant }}"   # Name of the credential
      description: "Hashicorp Vault signed dynamic SSH credentials"              # Description of the credential
      organization: "{{ organization_name }}"            # Organization name in AAP
      credential_type: "Machine"                              # Type of the credential
      state: "{{ state }}"                                      # Ensures the credential is updated or created if absent
      inputs:                                                  # All required fields for this credential type
        username: "{{ machine_user }}"         # Username for SSH access
        ssh_key_data: "{{ ssh_private_key | default(None) }}"  # SSH private key data
      controller_host: "{{ aap_url }}"
      controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"
      controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"
      validate_certs: false                                   # Skip SSL verification if using self-signed certs
    register: ssh_vault_credentials

  - name: Display Machine Credential Info
    ansible.builtin.debug:
      msg: "SSH Credential info: {{ ssh_vault_credentials }}"

  - name: Use HashiCorp Vault Signed SSH as Credential Source
    ansible.controller.credential_input_source:
      input_field_name: "ssh_public_key_data"
      target_credential: "{{ ssh_machine_credentials.id }}"
      source_credential: "hashicorp_vault_ssh_approle_{{ tenant }}"  # Name of the source credential used for auth to Vault
      state: "{{ state | default('present') }}"  
      metadata:
        public_key: "{{ ssh_public_key | default(None) }}"  # Public key to be used for SSH
        auth_path: "{{ auth_path | default('approle')}}"  # Path to the Vault SSH auth method
        role: "{{ ssh_vault_role | default('aap_tenant') }}"  # Role in Vault for this credential
        secret_path: "{{ secret_path | default('ssh') }}"  # Path to the Vault SSH secrets engine
      controller_host: "{{ aap_url }}"                    # URL of your AAP instance
      controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"                        # AAP username
      controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"           # AAP password
      validate_certs: false                               # Skip SSL verification if using self-signed certs
    register: vault_credential_source
### VAULT SSH CREDENTIAL
# Example of how to use the credential_input_source
  # credential_input_source
  # role: aap_tenant
  # auth_path: approle
  # public_key: >-
  #   ssh-ed25519
  #   AAAAC3NzaC1lZDI1NTE5AAAAICoK08mjEE.....
  # secret_path: ssh
