---
- name: Vault SSH Credential Block
  block:
  - name: Configure AppRole for HashiCorp Vault SSH Credential
    ansible.controller.credential:
      name: "hashicorp_vault_ssh_approle_{{ tenant }}"    # Name of the credential per aap tenant
      description: "Credential for HashiCorp Vault SSH AppRole integration {{ tenant }}"
      organization: "{{ organization_name }}"             # Organization name in AAP
      credential_type: "HashiCorp Vault Signed SSH"       # Type of the credential
      state: "{{ state }}"                                # updated or created if absent
      inputs:                                             # All required fields for this credential type
        url: "{{ vault_url }}"                            # Server URL (VAULT_ADDR)
        cacert: "{{ ca_cert | default(None) }}"           # CA Certificate if applicable
        role_id: "{{ role_id }}"                          # Vault AppRole role_id
        secret_id: "{{ secret_id }}"                      # Vault AppRole secret_id
        default_auth_path: "{{ auth_path | default('approle') }}"     # Path to the Vault AppRole auth method
        namespace: "{{ vault_namespace }}"                # Vault namespace if applicable
      validate_certs: false
      controller_host: "{{ aap_url }}"
      controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"
      controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"
    register: vault_ssh_auth_credentials

  - name: Display Credential Status
    ansible.builtin.debug:
      msg: "Credential update response: {{ vault_ssh_auth_credentials }}"

  - name: Configure Machine Credentials using Vault Signed SSH
    ansible.controller.credential:
      name: "hashicorp_vault_ssh_machine_creds_{{ tenant }}"         # Name of the credential
      description: "Hashicorp Vault signed dynamic SSH credentials"  # Description of the credential
      organization: "{{ organization_name }}"                        # Organization name in AAP
      credential_type: "Machine"                                     # Type of the credential
      state: "{{ state }}"                                           # Ensures the credential is updated or created if absent
      inputs:                                                        # All required fields for this credential type
        username: "{{ machine_user }}"                               # Username for SSH access
        ssh_key_data: "{{ ssh_private_key | default(None) }}"        # SSH private key data
      controller_host: "{{ aap_url }}"
      controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"
      controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"
      validate_certs: false                                         # Skip SSL verification if using self-signed certs
    register: ssh_vault_machine_credentials

  - name: Display Machine Credential Info
    ansible.builtin.debug:
      msg: "SSH Credential info: {{ ssh_vault_machine_credentials }}"

  - name: Use HashiCorp Vault Signed SSH as Credential Source
    ansible.controller.credential_input_source:
      input_field_name: "ssh_public_key_data"
      target_credential: "{{ ssh_vault_machine_credentials.id }}"
      source_credential: "hashicorp_vault_ssh_approle_{{ tenant }}"  # Name of the source credential used for auth to Vault
      state: "{{ state | default('present') }}"  
      metadata:
        public_key: "{{ ssh_public_key | default(None) }}"    # Public key to be used for SSH
        auth_path: "{{ auth_path | default('approle')}}"      # Path to the Vault SSH auth method
        role: "{{ ssh_vault_role | default('aap_tenant') }}"  # Role in Vault for this credential
        secret_path: "{{ secret_path | default('ssh') }}"     # Path to the Vault SSH secrets engine
      controller_host: "{{ aap_url }}"                        # URL of your AAP instance
      controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"           # AAP username
      controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"           # AAP password
      validate_certs: false                                   # Skip SSL verification if using self-signed certs
    register: vault_ssh_credential_source

- name: Vault Secret Lookup Credential Block
  block:
  - name: Configure AppRole for HashiCorp Vault Lookup Credential
    ansible.controller.credential:
      name: "hashicorp_vault_kv_approle_{{ tenant }}"               # Name of the credential
      description: "Credential for HashiCorp Vault KV AppRole integration {{ tenant }}"
      organization: "{{ organization_name }}"                       # Organization name in AAP
      credential_type: "HashiCorp Vault Secret Lookup"              # Type of the credential
      state: "{{ state | default('present') }}"                                      # Ensures the credential is updated or created if absent
      inputs:                                                       # All required fields for this credential type
        url: "{{ vault_url }}"                                      # Server URL (VAULT_ADDR)
        role_id: "{{ role_id }}"                                    # Vault AppRole role_id
        secret_id: "{{ secret_id }}"                                # Vault AppRole secret_id
        default_auth_path: "{{ auth_path | default('approle') }}"   # Path to the Vault AppRole auth method
        namespace: "{{ vault_namespace }}"                          # Vault namespace if applicable
        cacert: "{{ ca_cert | default(None) }}"
        api_version: "v2"
      controller_host: "{{ aap_url }}"                              # URL of your AAP instance
      controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"           # AAP username
      controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"           # AAP password
      validate_certs: false                                         # Skip SSL verification if using self-signed certs
    register: vault_kv_auth_credentials
  
  - name: Create ServiceNow Credential Type
    ansible.controller.credential_type:
      description: ''
      injectors:
        env:
          SN_HOST: "{% raw %}{{ host }}{% endraw %}"
          SN_PASSWORD: "{% raw %}{{ password }}{% endraw %}"
          SN_USERNAME: "{% raw %}{{ username }}{% endraw %}"
        extra_vars:
          SN_HOST: "{% raw %}{{ host }}{% endraw %}"
          SN_PASSWORD: "{% raw %}{{ password }}{% endraw %}"
          SN_USERNAME: "{% raw %}{{ username }}{% endraw %}"
      inputs:
        fields:
          - id: host
            label: Host
            type: string
          - id: username
            label: Username
            type: string
          - id: password
            label: Password
            secret: true
            type: string
        required:
          - instance
          - username
          - password
      kind: cloud
      name: ServiceNow ITSM                                  # Skip SSL verification if using self-signed certs
  
  # - name: Create a custom credential type
  #   ansible.controller.credential_type:
  #     name: Vault Custom Cred Type
  #     description: Custom credential type for HashiCorp Vault KV integration
  #     kind: cloud
  #     state: "{{ state | default('present') }}"
  #     organization: "{{ organization_name }}"
  #     inputs: {'fields' : [{'id': 'password', 'label': 'Password', 'type': 'string', 'required': true, 'secret': true}]}
  #     injectors: {'extra_vars': {'nexus_credential': 'test' }}
  #     controller_host: "{{ aap_url }}"                              # URL of your AAP instance
  #     controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"           # AAP username
  #     controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"           # AAP password
  #     validate_certs: false                                         # Skip SSL verification if using self-signed certs
  #   register: custom_vault_cred_type

  # - name: Create a credential of the custom type
  #   ansible.controller.credential:
  #     credential_type: "{{ custom_vault_cred_type.id }}"
  #     name: Credential From Vault
  #     inputs: {}
  #     organization: "{{ organization_name }}"
  #     controller_host: "{{ aap_url }}"                              # URL of your AAP instance
  #     controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"           # AAP username
  #     controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"           # AAP password
  #     validate_certs: false                                         # Skip SSL verification if using self-signed certs
  #   register: custom_credential
    
  # - name: Use the Vault Credential For the new credential
  #   ansible.controller.credential_input_source:
  #     input_field_name: password
  #     target_credential: "{{ custom_credential.id }}"
  #     source_credential: "{{ vault_kv_auth_credentials.id }}"
  #     metadata:
  #       auth_path: ""
  #       secret_backend: "my_engine"
  #       secret_key: "my_key"
  #       secret_path: "/my_root/my_folder"
  #       secret_version: ""
  #     organization: "{{ organization_name }}"
  #     controller_host: "{{ aap_url }}"                              # URL of your AAP instance
  #     controller_username: "{{ lookup('env', 'CONTROLLER_USERNAME') }}"           # AAP username
  #     controller_password: "{{ lookup('env', 'CONTROLLER_PASSWORD') }}"           # AAP password
  #     validate_certs: false                                   # Skip SSL verification if using self-signed certs
  #   register: vault_kv_credential_source